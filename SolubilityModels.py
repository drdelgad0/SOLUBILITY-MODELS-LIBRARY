# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xas6eyanWmcYjV1Wj8Ev18XhOa5yP_U6
"""

import pandas as pd
import numpy as np
from scipy.optimize import curve_fit

def func(T,A,B,C):
    return np.exp(A + B/T + C*np.log(T))

class dataframe:
    
    def __init__(self,url):
        self.url =url
    
    def show(self):
        df = pd.read_csv(self.url)
        return df

class modified_apelblat_model(dataframe):

    def parameters(self,m = "lm"):
        
        df = pd.read_csv(self.url)
        W = list(df.columns[1:])

        para_A = []
        para_B = []
        para_C = []
    
        for i in W:
            xdat = df["T"].values
            ydat = (df[i].values)
            popt = curve_fit(func,xdat,ydat,method=m)[0]
            para_A.append(popt[0])
            para_B.append(popt[1])
            para_C.append(popt[2])

        DF = pd.DataFrame({'A':para_A,'B':para_B,'C':para_C})
        return DF

    def values_exp(self,m = "lm"):

        df = pd.read_csv(self.url)

        W = list(df.columns[1:])

        para_A = []
        para_B = []
        para_C = []

        for i in W:
            xdat = df["T"].values
            ydat = (df[i].values)
            popt = curve_fit(func,xdat,ydat,method=m)[0]
            para_A.append(popt[0])
            para_B.append(popt[1])
            para_C.append(popt[2])

        C_temp = []
        C_exp  = []
       
       
        for i in W:
  
            xdat = df["T"].values
            Xdat = xdat.tolist()

            ydat = (df[i].values)
            Ydat =  ydat.tolist()


            C_temp += Xdat
            C_exp  += Ydat
 

        arr_tem = np.array(C_temp)
        arr_exp = np.array(C_exp)

        data_frame = pd.DataFrame({'Temperatura': arr_tem,'Xexp':arr_exp})
        return data_frame